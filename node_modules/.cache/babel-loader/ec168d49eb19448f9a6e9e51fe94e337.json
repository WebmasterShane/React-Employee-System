{"ast":null,"code":"import _slicedToArray from\"S:/Code/Week 19/ucsd-sd-fsf-pt-09-2020-u-c-master/19-React/02-Homework/React-Employee-System/React-Employee-System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import API from\"../utils/API\";import CardContainer from\"../components/Wrapper/index\";import Row from\"../components/Row\";import EmployeeContext from\"../utils/EmployeeContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Employees(){var _useState=useState({nameF:\"\",nameL:\"\",image:\"\",email:\"\",GHusername:\"\"}),_useState2=_slicedToArray(_useState,2),viewState=_useState2[0],setViewState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),userIndex=_useState8[0],setUserIndex=_useState8[1];// When the component mounts, a call will be made to get random users.\nuseEffect(function(){loadUsers();},[]);function nextUser(userIndex){// Ensure that the user index stays within our range of users\nif(userIndex>=users.length){userIndex=0;}setUser(users[userIndex]);setUserIndex(userIndex);}function previousUser(userIndex){// Ensure that the user index stays within our range of users\nif(userIndex<0){userIndex=users.length-1;}setUser(users[userIndex]);setUserIndex(userIndex);}function handleBtnClick(event){// Get the title of the clicked button\nvar btnName=event.target.getAttribute(\"data-value\");if(btnName===\"next\"){var newUserIndex=userIndex+1;nextUser(newUserIndex);}else{var _newUserIndex=userIndex-1;previousUser(_newUserIndex);}}function loadUsers(){API.getUsers().then(function(userData){API.getUsers(userData[0]).then(function(users){setUsers(users);console.log(users);setUser(users[0]);setViewState({});});}).catch(function(err){return console.log(err);});}return/*#__PURE__*/_jsx(EmployeeContext.Provider,{value:{user:user,users:users,handleBtnClick:handleBtnClick},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Welcome to LinkedUp\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-center\",children:\"Click on the arrows to browse users\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(CardContainer,{})})]})});}export default Employees;","map":{"version":3,"sources":["S:/Code/Week 19/ucsd-sd-fsf-pt-09-2020-u-c-master/19-React/02-Homework/React-Employee-System/React-Employee-System/src/pages/employeeBank.js"],"names":["React","useEffect","useState","API","CardContainer","Row","EmployeeContext","Employees","nameF","nameL","image","email","GHusername","viewState","setViewState","user","setUser","users","setUsers","userIndex","setUserIndex","loadUsers","nextUser","length","previousUser","handleBtnClick","event","btnName","target","getAttribute","newUserIndex","getUsers","then","userData","console","log","catch","err"],"mappings":"yOAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,0BAA5B,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,eACeL,QAAQ,CAAC,CACzCM,KAAK,CAAE,EADkC,CAEzCC,KAAK,CAAE,EAFkC,CAGzCC,KAAK,CAAE,EAHkC,CAIzCC,KAAK,CAAE,EAJkC,CAKzCC,UAAU,CAAE,EAL6B,CAAD,CADvB,wCACZC,SADY,eACDC,YADC,8BAQKZ,QAAQ,EARb,yCAQZa,IARY,eAQNC,OARM,8BASOd,QAAQ,CAAC,EAAD,CATf,yCASZe,KATY,eASLC,QATK,8BAUehB,QAAQ,CAAC,CAAD,CAVvB,yCAUZiB,SAVY,eAUDC,YAVC,eAYnB;AACAnB,SAAS,CAAC,UAAM,CACdoB,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASC,CAAAA,QAAT,CAAkBH,SAAlB,CAA6B,CAC3B;AACA,GAAIA,SAAS,EAAIF,KAAK,CAACM,MAAvB,CAA+B,CAC7BJ,SAAS,CAAG,CAAZ,CACD,CACDH,OAAO,CAACC,KAAK,CAACE,SAAD,CAAN,CAAP,CACAC,YAAY,CAACD,SAAD,CAAZ,CACD,CAED,QAASK,CAAAA,YAAT,CAAsBL,SAAtB,CAAiC,CAC/B;AACA,GAAIA,SAAS,CAAG,CAAhB,CAAmB,CACjBA,SAAS,CAAGF,KAAK,CAACM,MAAN,CAAe,CAA3B,CACD,CACDP,OAAO,CAACC,KAAK,CAACE,SAAD,CAAN,CAAP,CACAC,YAAY,CAACD,SAAD,CAAZ,CACD,CAED,QAASM,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7B;AACA,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,YAA1B,CAAhB,CACA,GAAIF,OAAO,GAAK,MAAhB,CAAwB,CACtB,GAAMG,CAAAA,YAAY,CAAGX,SAAS,CAAG,CAAjC,CACAG,QAAQ,CAACQ,YAAD,CAAR,CACD,CAHD,IAGO,CACL,GAAMA,CAAAA,aAAY,CAAGX,SAAS,CAAG,CAAjC,CACAK,YAAY,CAACM,aAAD,CAAZ,CACD,CACF,CAED,QAAST,CAAAA,SAAT,EAAqB,CACnBlB,GAAG,CAAC4B,QAAJ,GACGC,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChB9B,GAAG,CAAC4B,QAAJ,CAAaE,QAAQ,CAAC,CAAD,CAArB,EAA0BD,IAA1B,CAA+B,SAAAf,KAAK,CAAI,CACtCC,QAAQ,CAACD,KAAD,CAAR,CACAiB,OAAO,CAACC,GAAR,CAAYlB,KAAZ,EACAD,OAAO,CAACC,KAAK,CAAC,CAAD,CAAN,CAAP,CACAH,YAAY,CAAC,EAAD,CAAZ,CAGD,CAPD,EAQD,CAVH,EAWGsB,KAXH,CAWS,SAAAC,GAAG,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ,EAXZ,EAYD,CAED,mBACE,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAACtB,IAAI,CAAJA,IAAD,CAAOE,KAAK,CAALA,KAAP,CAAcQ,cAAc,CAAdA,cAAd,CAAjC,uBACA,oCACE,WAAI,SAAS,CAAC,aAAd,iCADF,cAEE,WAAI,SAAS,CAAC,aAAd,iDAFF,cAGE,KAAC,GAAD,wBACE,KAAC,aAAD,IADF,EAHF,GADA,EADF,CAaD,CAED,cAAelB,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/Wrapper/index\";\nimport Row from \"../components/Row\";\nimport EmployeeContext from \"../utils/EmployeeContext\"\n\nfunction Employees() {\n  const [viewState, setViewState] = useState({\n    nameF: \"\",\n    nameL: \"\",\n    image: \"\",\n    email: \"\",\n    GHusername: \"\"\n  });\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  const [userIndex, setUserIndex] = useState(0);\n\n  // When the component mounts, a call will be made to get random users.\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= users.length) {\n      userIndex = 0;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = users.length - 1;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function handleBtnClick(event) {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      const newUserIndex = userIndex + 1;\n      nextUser(newUserIndex);\n    } else {\n      const newUserIndex = userIndex - 1;\n      previousUser(newUserIndex);\n    }\n  }\n\n  function loadUsers() {\n    API.getUsers()\n      .then(userData => {\n        API.getUsers(userData[0]).then(users => {\n          setUsers(users);\n          console.log(users);\n          setUser(users[0]);\n          setViewState({\n\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <EmployeeContext.Provider value={{user, users, handleBtnClick }}>\n    <div>\n      <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n      <h3 className=\"text-center\">Click on the arrows to browse users</h3>\n      <Row>\n        <CardContainer\n       \n        />\n      </Row>\n    </div>\n    </EmployeeContext.Provider>\n  );\n}\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}