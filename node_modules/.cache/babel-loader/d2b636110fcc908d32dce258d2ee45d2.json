{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Week 19\\\\ucsd-sd-fsf-pt-09-2020-u-c-master\\\\19-React\\\\02-Homework\\\\React-Employee-System\\\\src\\\\pages\\\\employeeBank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/CardContainer/index\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\nimport \"../components/Navbar/style.css\";\nimport TableData from \"../components/tableData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Employees() {\n  _s();\n\n  const [viewState, setViewState] = useState({\n    nameF: \"\",\n    nameL: \"\",\n    image: \"\",\n    email: \"\",\n    GHusername: \"\",\n    phone: \"\"\n  });\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  let [filteredEmployees, setFilteredEmployees] = useState([]);\n  let [Alpha, setAlpha] = useState([]);\n  useEffect(() => {\n    console.log(\"test\");\n    loadUsers();\n  }, []);\n\n  function loadUsers() {\n    API.getUsers().then(users => {\n      console.log(\"secondTestTest\");\n      setUsers(users);\n      setUser(users[0]);\n      setFilteredEmployees(users);\n      setViewState({\n        name: users.nameF + users.nameL,\n        image: users.image,\n        email: users.email,\n        GHusername: users.GHusername,\n        phone: users.phone\n      });\n    }).catch(err => console.log(err));\n  }\n\n  console.log(users);\n\n  const handleSearchChange = () => {\n    //get input value - change to lowercase\n    const inputVal = document.querySelector(\"#search\").value.toLowerCase(); //array filter\n\n    let filteredEmployeeArr = users.filter(employee => employee.nameF.toLowerCase().indexOf(inputVal) > -1); //set the filtered data to state\n\n    setFilteredEmployees(filteredEmployeeArr);\n  };\n\n  const changetoSort = function () {\n    console.log(users);\n    const sortedemployees = users.sort(function (a, b) {\n      if (a.nameL < b.nameL) {\n        return -1;\n      }\n\n      if (a.nameL > b.nameL) {\n        return 1;\n      }\n\n      return 0;\n    });\n    console.log(sortedemployees);\n    setAlpha(sortedemployees);\n    filteredEmployees = Alpha;\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: filteredEmployees,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        classname: \"justify-content-left col\",\n        id: \"search\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changetoSort,\n        children: \"Sort by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navbar-brandd-flex justify-content-center font-weight-bold col\",\n        children: \"Employee Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-dark table-hover\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(TableData, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Employees, \"YzOt7VKbrwcmD7WXr2F9DylWtlA=\");\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["S:/Code/Week 19/ucsd-sd-fsf-pt-09-2020-u-c-master/19-React/02-Homework/React-Employee-System/src/pages/employeeBank.js"],"names":["React","useEffect","useState","API","CardContainer","EmployeeContext","TableData","Employees","viewState","setViewState","nameF","nameL","image","email","GHusername","phone","user","setUser","users","setUsers","filteredEmployees","setFilteredEmployees","Alpha","setAlpha","console","log","loadUsers","getUsers","then","name","catch","err","handleSearchChange","inputVal","document","querySelector","value","toLowerCase","filteredEmployeeArr","filter","employee","indexOf","changetoSort","sortedemployees","sort","a","b"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAO,gCAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,KAAK,EAAE,EADkC;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,KAAK,EAAE,EAHkC;AAIzCC,IAAAA,KAAK,EAAE,EAJkC;AAKzCC,IAAAA,UAAU,EAAE,EAL6B;AAMzCC,IAAAA,KAAK,EAAE;AANkC,GAAD,CAA1C;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,EAAD,CAAxD;AACA,MAAI,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASA,SAAT,GAAqB;AACfvB,IAAAA,GAAG,CAACwB,QAAJ,GAAeC,IAAf,CAAoBV,KAAK,IAAI;AAC3BM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAN,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,OAAO,CAACC,KAAK,CAAC,CAAD,CAAN,CAAP;AACAG,MAAAA,oBAAoB,CAACH,KAAD,CAApB;AACAT,MAAAA,YAAY,CAAC;AACXoB,QAAAA,IAAI,EAAEX,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACP,KADf;AAEXC,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAFF;AAGXC,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAHF;AAIXC,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAJP;AAKXC,QAAAA,KAAK,EAAEG,KAAK,CAACH;AALF,OAAD,CAAZ;AAOD,KAZD,EAcDe,KAdC,CAcKC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAdZ;AAeL;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AAEA,QAAMc,kBAAkB,GAAG,MAAM;AAC/B;AACA,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,KAAlC,CAAwCC,WAAxC,EAAjB,CAF+B,CAG/B;;AACA,QAAIC,mBAAmB,GAAGpB,KAAK,CAACqB,MAAN,CAAcC,QAAD,IAAcA,QAAQ,CAAC9B,KAAT,CAAe2B,WAAf,GAA6BI,OAA7B,CAAqCR,QAArC,IAAiD,CAAC,CAA7E,CAA1B,CAJ+B,CAK/B;;AACAZ,IAAAA,oBAAoB,CAACiB,mBAAD,CAApB;AAED,GARD;;AASA,QAAMI,YAAY,GAAG,YAAU;AAC7BlB,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,UAAMyB,eAAe,GAAGzB,KAAK,CAAC0B,IAAN,CAAW,UAASC,CAAT,EAAWC,CAAX,EAAa;AAE9C,UAAID,CAAC,CAAClC,KAAF,GAAQmC,CAAC,CAACnC,KAAd,EAAoB;AAClB,eAAO,CAAC,CAAR;AACD;;AACD,UAAIkC,CAAC,CAAClC,KAAF,GAAQmC,CAAC,CAACnC,KAAd,EAAoB;AAClB,eAAO,CAAP;AACD;;AACD,aAAO,CAAP;AACD,KATuB,CAAxB;AAUAa,IAAAA,OAAO,CAACC,GAAR,CAAYkB,eAAZ;AACApB,IAAAA,QAAQ,CAACoB,eAAD,CAAR;AACAvB,IAAAA,iBAAiB,GAAGE,KAApB;AACD,GAfD;;AAmBA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEF,iBAAjC;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,gDAAf;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,0BAAjB;AAA4C,QAAA,EAAE,EAAC,QAA/C;AAAwD,QAAA,QAAQ,EAAEY;AAAlE;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGD;AAAG,QAAA,SAAS,EAAC,gEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHC;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eASA;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,4CAAjB;AAAA,iCAEC;AAAA,mCACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzFQnC,S;;KAAAA,S;AA2FT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/CardContainer/index\";\nimport EmployeeContext from \"../utils/EmployeeContext\"\nimport \"../components/Navbar/style.css\"\nimport TableData from \"../components/tableData\"\n\n\nfunction Employees() {\n  const [viewState, setViewState] = useState({\n    nameF: \"\",\n    nameL: \"\",\n    image: \"\",\n    email: \"\",\n    GHusername: \"\",\n    phone: \"\",\n     });\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  let [filteredEmployees, setFilteredEmployees] = useState([])\n  let [Alpha, setAlpha] = useState([])\n\n  useEffect(() => {\n    console.log(\"test\")\n    loadUsers();\n  }, []);\n\n  function loadUsers() {\n        API.getUsers().then(users => {\n          console.log(\"secondTestTest\")\n          setUsers(users);\n          setUser(users[0]);\n          setFilteredEmployees(users);\n          setViewState({\n            name: users.nameF + users.nameL,\n            image: users.image,\n            email: users.email,\n            GHusername: users.GHusername,\n            phone: users.phone\n          });\n        })\n        \n      .catch(err => console.log(err));\n  }\n  console.log(users);\n\n  const handleSearchChange = () => {\n    //get input value - change to lowercase\n    const inputVal = document.querySelector(\"#search\").value.toLowerCase();\n    //array filter\n    let filteredEmployeeArr = users.filter((employee) => employee.nameF.toLowerCase().indexOf(inputVal) > -1);\n    //set the filtered data to state\n    setFilteredEmployees(filteredEmployeeArr);\n\n  };\n  const changetoSort = function(){\n    console.log(users)\n    const sortedemployees = users.sort(function(a,b){\n \n      if (a.nameL<b.nameL){\n        return -1\n      }\n      if (a.nameL>b.nameL){\n        return 1\n      }\n      return 0 \n    })\n    console.log(sortedemployees)\n    setAlpha(sortedemployees);\n    filteredEmployees = Alpha\n  }\n\n  \n\n  return (\n    <EmployeeContext.Provider value={filteredEmployees}>\n       <nav className=\"navbar navbar-expand-lg justify-content-center\">\n       <input classname=\"justify-content-left col\" id=\"search\" onChange={handleSearchChange}/> \n       <button onClick={changetoSort}>Sort by name</button>\n      <p className=\"navbar-brandd-flex justify-content-center font-weight-bold col\">\n        Employee Tracker\n      </p>\n    </nav>\n    \n    <div>\n    <div className=\"container\">\n      <table className=\"table table-striped table-dark table-hover\">\n        \n       <tbody>\n        <TableData\n        />\n        </tbody>\n      </table>\n    </div>\n    </div>\n    </EmployeeContext.Provider>\n  );\n}\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}