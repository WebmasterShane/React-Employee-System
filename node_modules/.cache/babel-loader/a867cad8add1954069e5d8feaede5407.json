{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Week 19\\\\ucsd-sd-fsf-pt-09-2020-u-c-master\\\\19-React\\\\02-Homework\\\\React-Employee-System\\\\React-Employee-System\\\\src\\\\pages\\\\employeeBank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/Wrapper/index\";\nimport Row from \"../components/Row\";\nimport GalleryContext from \"../utils/GalleryContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gallery() {\n  _s();\n\n  const [galleryState, setGalleryState] = useState({\n    title: \"\",\n    image: \"\",\n    language: \"\"\n  });\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  const [userIndex, setUserIndex] = useState(0); // When the component mounts, a call will be made to get random users.\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= users.length) {\n      userIndex = 0;\n    }\n\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = users.length - 1;\n    }\n\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function handleBtnClick(event) {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n\n    if (btnName === \"next\") {\n      const newUserIndex = userIndex + 1;\n      nextUser(newUserIndex);\n    } else {\n      const newUserIndex = userIndex - 1;\n      previousUser(newUserIndex);\n    }\n  }\n\n  function loadUsers() {\n    API.getLanguagesList().then(languages => {\n      API.getUsersByLanguage(languages[0]).then(users => {\n        setUsers(users);\n        console.log(users);\n        setUser(users[0]);\n        setGalleryState({\n          title: users[0].login,\n          image: users[0].image,\n          language: users[0].language\n        });\n      });\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(GalleryContext.Provider, {\n    value: {\n      user,\n      users,\n      handleBtnClick\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Welcome to LinkedUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Click on the arrows to browse users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(CardContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gallery, \"0Dr2jR7rCf9bQw8zAEONnHQHnEA=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["S:/Code/Week 19/ucsd-sd-fsf-pt-09-2020-u-c-master/19-React/02-Homework/React-Employee-System/React-Employee-System/src/pages/employeeBank.js"],"names":["React","useEffect","useState","API","CardContainer","Row","GalleryContext","Gallery","galleryState","setGalleryState","title","image","language","user","setUser","users","setUsers","userIndex","setUserIndex","loadUsers","nextUser","length","previousUser","handleBtnClick","event","btnName","target","getAttribute","newUserIndex","getLanguagesList","then","languages","getUsersByLanguage","console","log","login","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/Wrapper/index\";\nimport Row from \"../components/Row\";\nimport GalleryContext from \"../utils/GalleryContext\"\n\nfunction Gallery() {\n  const [galleryState, setGalleryState] = useState({\n    title: \"\",\n    image: \"\",\n    language: \"\",\n  });\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState([]);\n  const [userIndex, setUserIndex] = useState(0);\n\n  // When the component mounts, a call will be made to get random users.\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= users.length) {\n      userIndex = 0;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = users.length - 1;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function handleBtnClick(event) {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      const newUserIndex = userIndex + 1;\n      nextUser(newUserIndex);\n    } else {\n      const newUserIndex = userIndex - 1;\n      previousUser(newUserIndex);\n    }\n  }\n\n  function loadUsers() {\n    API.getLanguagesList()\n      .then(languages => {\n        API.getUsersByLanguage(languages[0]).then(users => {\n          setUsers(users);\n          console.log(users);\n          setUser(users[0]);\n          setGalleryState({\n            title: users[0].login,\n            image: users[0].image,\n            language: users[0].language\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <GalleryContext.Provider value={{user, users, handleBtnClick }}>\n    <div>\n      <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n      <h3 className=\"text-center\">Click on the arrows to browse users</h3>\n      <Row>\n        <CardContainer\n       \n        />\n      </Row>\n    </div>\n    </GalleryContext.Provider>\n  );\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}